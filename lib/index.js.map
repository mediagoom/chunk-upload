{"version":3,"file":"index.js","sources":["../src/core/httprequest.js","../src/client.js"],"sourcesContent":["//import request from 'superagent';\nconst request = require('superagent');\n\nfunction blobToBuffer (blob, cb) {\n    if (typeof Blob === 'undefined' || !(blob instanceof Blob)) {\n        throw new Error('first argument must be a Blob');\n    }\n    if (typeof cb !== 'function') {\n        throw new Error('second argument must be a function');\n    }\n\n    var reader = new FileReader();\n\n    function onLoadEnd (e) {\n        reader.removeEventListener('loadend', onLoadEnd, false);\n        if (e.error) cb(e.error);\n        else cb(null, new Buffer(reader.result));\n    }\n\n    reader.addEventListener('loadend', onLoadEnd, false);\n    reader.readAsArrayBuffer(blob);\n}\n\n\nfunction _req(opts, resolve, reject)\n{\n\n    let r = null;\n\n    if('GET' === opts.method)\n    {\n        r = request.get(opts.uri);\n    }\n    else if('PUT' === opts.method)\n    {\n        r = request.put(opts.uri);\n    }\n    else\n    {\n        r = request.post(opts.uri);\n    }\n\n    if(undefined !== opts.headers)\n    {\n        const keys = Object.keys(opts.headers);\n\n        (keys).forEach(element => {\n            r.set(element, opts.headers[element]);\n        });\n    }\n\n    if(undefined !== opts.body)\n        r.send(opts.body);\n\n    r.end( (error, res) => {\n\n        if(null != error){\n            //console.log(\"httprequest error\", error.message);\n            reject(error);\n        }\n        else{\n            //console.log(\"httprequest response\" , res.statusCode);\n\n            let statusCode = res.status;\n                \n            if(res.status >= 200 && res.status < 300)\n            {\n                resolve( { response: res, body : res.body} );\n            }\n            else\n            {\n                let error = new Error('Request Failed.\\n' +\n                                `Status Code: ${statusCode}`);\n\n                error['body'] = res.body;\n                error['statusCode'] = statusCode;\n                error['headers'] = res.headers;\n\n                reject(error);\n            }\n        }\n    });\n}\n\n\n\nfunction req(opts)\n{\n    return new Promise( (resolve, reject) => {\n\n\n        let def = true;\n        try{undefined === Blob;}catch(err){def = false;}\n\n        if(!def || (!(opts.body instanceof Blob)) )\n        {\n            _req(opts, resolve, reject);\n        }\n        else\n        {\n            blobToBuffer(opts.body, (err, buffer) =>{\n                if(null != err)\n                    reject(err);\n                else\n                {\n                    opts.body = buffer;\n                    _req(opts, resolve, reject);\n                }\n            });\n        }\n   \n    });\n}\n\nclass httprequest {\n  \n    constructor(options = null)\n    {\n        this._opt = { };\n\n        if(null != process)\n        {\n            if(null != process.env)\n                if(null != process.env.http_proxy)\n                    this._opt.proxy = process.env.http_proxy;\n        }\n            \n        if(null != options)\n        {\n            Object.assign(this._opt, options);\n        }\n \n    }\n    \n    get(url) {\n\n        this._opt.method = 'GET';\n        this._opt.uri    = url;\n\n        return req(this._opt);\n        \n    }\n\n    put(url, body){\n\n        this._opt.method = 'PUT';\n        this._opt.uri    = url;\n\n        this._opt.body   = body;\n\n        return req(this._opt);\n    }\n}\n\nmodule.exports = httprequest;\n","//import { EventEmitter } from 'events';\n//import httprequest from './core/httprequest';\n\nconst EventEmitter = require('events');\nconst httprequest = require('./core/httprequest');\n\n/**\n* Utility method to format bytes into the most logical magnitude (KB, MB,\n* or GB).\n*/\n/*function formatBytes(number) {\n        var units = ['B', 'KB', 'MB', 'GB', 'TB'],\n            //bytes = this,\n            i;\n\n        for (i = 0; bytes >= 1024 && i < 4; i++) {\n            bytes /= 1024;\n        }\n\n        return bytes.toFixed(2) + units[i];\n}*/\n\nfunction upload(upl)\n{\n    upl._started = true;\n\n    let self = upl;\n\n    setTimeout(function () {\n        try{\n            // Prevent range overflow\n            if (self._range_end > self._file.size) {\n                //self.range_end = self.file_size;\n                throw 'Invalid Range On Upload!';\n            }\n\n            //console.log(\"re2 \" + self._range_end + \" \" + self._range_start + \" \" + self._opt.chunk_size);\n\n            let chunk = self._file[self._slice_method](self._range_start, self._range_end);\n            let chunk_id = Math.ceil(self._range_start / self._opt.chunk_size);\n                \n            let opt   = {headers:\n            {\n                'Content-Type' : 'application/octet-stream'\n                , 'Content-Range': 'bytes ' + self._range_start \n                                            + '-' + self._range_end + '/' + self._file.size\n                , 'file-name': self._opt.name\n                , 'chunkid' : chunk_id.toString()\n            }\n            };\n\n            if(null != self._opt.owner){\n                opt.headers['owner'] = self._opt.owner;\n            }\n            if(null != self._opt.id) {\n                opt.headers['fileid'] = self._opt.id;\n            } \n                            \n            let http = self.http_request(opt);\n            http.put(self._opt.url, chunk).then(\n                (/*res*/) => {\n                    //console.log(\"re3 \" + self._range_end + \" \" + self._range_start + \" \" + self._opt.chunk_size);\n\n                    let n = new Number((self._range_start / self._opt.chunk_size) / (self._file.size / self._opt.chunk_size) * 100);\n\n                    let sn = n.toFixed(2);\n                    \n\n                    // If the end range is already the same size as our file, we\n                    // can assume that our last chunk has been processed and exit\n                    // out of the function.\n                    if (self._range_end === self._file.size) {\n                        //console.log(\"upload completed\"); \n                        self._onUploadComplete();\n                    }\n                    else\n                    {\n\n                        // Update our ranges\n                        self._range_start = self._range_end;\n                        self._range_end = self._range_start + self._opt.chunk_size;\n\n                        // Prevent range overflow\n                        if (self._range_end > self._file.size) {\n                            self._range_end = self._file.size;\n                        }\n\n                        // Continue as long as we aren't paused\n                        if (!self._is_paused) {\n                            upload(self);\n                        }                                \n                                            \n                                                \n                    }\n\n                    self._onProgress(sn);\n                }\n                ,  (err) => {self._raise_error(err);}\n            );\n\n        }catch(err)\n        {\n            self._raise_error(err);\n        }\n            \n            \n    }, 20);\n}\n\nclass Uploader extends EventEmitter {\n    \n    constructor(file, options) {\n        \n        super();\n    \n        this._file        = file;\n        this._started     = false;\n        this._range_end   = 0;\n        this._range_start = 0;\n        this._is_paused   = true;\n        \n\n        let opt = {\n            url : '/upload'\n            , id : null\n            , tag : null\n            , name : file.name\n            , owner: null\n            , chunk_size : (1024 * 8) * 10\n            , start_position : 0\n        };\n\n        if(null != options)\n            this._opt = Object.assign(opt, options);\n        else\n            this._opt = opt;\n\n        if ('mozSlice' in this._file) {\n            this._slice_method = 'mozSlice';\n        }\n        else if ('webkitSlice' in this._file) {\n            this._slice_method = 'webkitSlice';\n        }\n        else {\n            this._slice_method = 'slice';\n        }\n    \n        this._range_start = this._opt.start_position;\n        this._range_end   = this._range_start + this._opt.chunk_size;\n        if(this._range_end > this._file.size)\n            this._range_end = this._file.size;\n\n        //console.log(\"re1 \" + this._range_end + \" \" + this._range_start + \" \" + this._opt.chunk_size);\n        //\n        this.status       = 'initialized';\n    }\n\n    http_request(request_options)\n    {\n        if(undefined === this._opt.http_request)\n        {\n            return new httprequest(request_options);\n        }\n        else\n        {\n            return this._opt.http_request(request_options);\n        }\n    }\n\n    name() {return this._opt.name;}\n\n    _raise_error(err){\n        //console.log(\"uploader error: \" + err.message);\n        this._is_paused = true;\n        this.status = 'error';\n        this.emit('error', err);\n    }\n\n    _onProgress(sn){this.emit('progress', sn);}\n    _onUploadComplete(){\n        this.status = 'completed';\n\n        this.emit('completed');\n    }\n  \n    start() {\n        this._is_paused = false;\n        this.emit('start');\n        this.status = 'started';\n        upload(this);\n    }\n\n    pause() {\n        this._is_paused = true;\n\n        this.status = 'paused';\n    }\n\n    paused() { return this._is_paused;}\n\n    resume() {\n        this._is_paused = false;\n\n        this.status = 'started';\n        upload(this);\n    }\n\n}\n\n\nclass UploadManager extends EventEmitter {\n    \n    constructor(options) {\n \n        super();\n    \n\n        let opt = {\n            url : '/upload'\n            , chunk_size : (1024 * 8) * 10\n            , start_position : 0\n        };\n\n        if(null != options)\n            this._opt = Object.assign(opt, options);\n        else\n            this._opt = opt;\n\n        this.uploader = {};\n    }\n\n    setOptions(options)\n    {\n        this._opt = Object.assign(this._opt, options);\n    }\n\n    _raise_error(err, kid){this.emit('error', err, kid);}\n    _onProgress(sn, kid){this.emit('progress', sn, kid);}\n    _onUploadComplete(kid){this.emit('completed', kid);}\n\n    add(file, id, options)\n    {\n        if(null != this.uploader[id])\n        {\n            throw 'uploader already exist';\n        }\n\n        let op = Object.assign(this._opt, options);\n        let kid = id;\n        \n        let up = new Uploader(file, op);\n        \n        up.on('completed', () => {this._onUploadComplete(kid);});\n        up.on('error', (err) => {this._raise_error(err, kid);});\n        up.on('progress', (n) => { this._onProgress(n, kid);});\n\n        this.uploader[id] = up;\n\n        return up;\n    }\n\n    start(id){\n\n        if(null != this.uploader[id])\n        {\n            throw 'invalid id';\n        }\n\n        this.uploader[id].start();\n\n    }\n\n    pause(id){\n\n        if(null != this.uploader[id])\n        {\n            throw 'invalid id';\n        }\n\n        this.uploader[id].pause();\n\n    }\n\n    resume(id){\n\n        if(null != this.uploader[id])\n        {\n            throw 'invalid id';\n        }\n\n        this.uploader[id].resume();\n\n    }\n\n    status(id)\n    {\n        if(null != this.uploader[id])\n        {\n            throw 'invalid id';\n        }\n\n        return this.uploader[id].status;\n    }\n\n    selectFiles(e)\n    {\n        let files = e.files;\n\n        for (var i = 0; i < files.length; i++) {\n            let file = files[i];\n                    \n            let id = file.name;\n            id = id.replace('.', '_');\n            id = id.replace(' ', '_');\n            id = id.replace('&', '_');\n            id = id.replace(' ', '_');\n                        \n            this.add(file, id);\n            this.emit('new', id);\n\n        }\n        \n    }\n\n}\n\nmodule.exports = {\n    default : Uploader\n    , UploadManager\n};\n\n\n"],"names":["blobToBuffer","blob","cb","Blob","Error","reader","FileReader","onLoadEnd","e","removeEventListener","error","Buffer","result","addEventListener","readAsArrayBuffer","_req","opts","resolve","reject","r","method","request","get","uri","put","post","undefined","headers","keys","Object","forEach","element","set","body","send","end","res","statusCode","status","response","req","Promise","def","err","buffer","httprequest","options","_opt","process","env","http_proxy","proxy","url","upload","upl","_started","self","setTimeout","_range_end","_file","size","chunk","_slice_method","_range_start","chunk_id","Math","ceil","chunk_size","opt","name","toString","owner","id","http","http_request","then","n","Number","sn","toFixed","_onUploadComplete","_is_paused","_onProgress","_raise_error","Uploader","file","tag","start_position","request_options","emit","EventEmitter","UploadManager","uploader","kid","op","up","on","start","pause","resume","files","i","length","replace","add","default"],"mappings":"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"}